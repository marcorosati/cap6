apiVersion: v1
kind: Template
metadata:
  name: quotes
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
    generation: 1
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2020-04-26T08:42:54Z 
    generation: 2
    name: quotesdb
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: quotesapi:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/redhat-do288/quotes.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: php:7.1
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: ${SECRET}
      type: GitHub
    - generic:
        secret: ${SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
    generation: 1
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: quotesapi
      deploymentconfig: quotesapi
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
        labels:
          app: quotesapi
          deploymentconfig: quotesapi
      spec:
        containers:
        - env:
          - name: DATABASE_NAME
            value: quotesdb
          - name: DATABASE_PASSWORD
            value: ${PASSWORD}
          - name: DATABASE_SERVICE_NAME
            value: quotesdb
          - name: DATABASE_USER
            value: quoteapp
          imagePullPolicy: Always
          name: quotesapi
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesapi
        from:
          kind: ImageStreamTag
          name: quotesapi:latest
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
    generation: 1
    labels:
      app: quotesdb
    name: quotesdb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: quotesdb
      deploymentconfig: quotesdb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
        labels:
          app: quotesdb
          deploymentconfig: quotesdb
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: quotesdb
          - name: MYSQL_PASSWORD
            value: ${PASSWORD}
          - name: MYSQL_USER
            value: quoteapp
          imagePullPolicy: IfNotPresent
          name: quotesdb
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesdb
        from:
          kind: ImageStreamTag
          name: mysql:5.7
          namespace: openshift
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: quotesapi
      deploymentconfig: quotesapi
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: quotesdb
    name: quotesdb
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: quotesdb
      deploymentconfig: quotesdb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    host: ${HOSTNAME}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: quotesapi
      weight: 100
    wildcardPolicy: None
parameters:
- name: HOSTNAME
  required: true
- name: PASSWORD
  generate: expression
  from: '[a-zA-z0-9]{16}'
- name: SECRET
  generate: expression
  from: '[a-zA-z0-9]{40}'
